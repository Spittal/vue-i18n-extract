{"version":3,"file":"vue-i18n-extract.modern.js","sources":["../src/report-command/vue-files.ts","../src/report-command/language-files.ts","../src/report-command/report.ts","../src/report-command/index.ts","../src/index.ts"],"sourcesContent":["import { SimpleFile, I18NItem } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nexport function readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`vueFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItem> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path: match[captureGroup],\n      line,\n      file: file.fileName,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItem[] {\n  const methodRegExp = /(?:[$ .]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItem[] {\n  const componentRegExp = /(?:<i18n)(?:.|\\n)*?(?:[^:]path=(\"|'))(.*?)\\1/gi;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItem[] {\n  const directiveRegExp = /v-t=\"'(.*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItem[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItem[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItem[] {\n  const filesList = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { SimpleFile, I18NLanguage, I18NItem } from '../types';\n\nfunction readLangFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`languageFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isJSON = extension === '.json';\n    const isYAML = extension === '.yaml' || extension === '.yml';\n\n    let langObj;\n    if (isJSON) {\n      langObj = JSON.parse(fs.readFileSync(langPath, 'utf8'));\n    } else if (isYAML) {\n      langObj = yaml.safeLoad(fs.readFileSync(langPath, 'utf8'));\n    } else {\n      langObj = eval(fs.readFileSync(langPath, 'utf8'));\n    }\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { fileName, path: f, content: JSON.stringify(langObj) };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: SimpleFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    const flattenedObject = dot.dot(JSON.parse(file.content));\n    const i18nInFile = Object.keys(flattenedObject).map((key, index) => {\n      return {\n        line: index,\n        path: key,\n        file: file.fileName,\n      };\n    });\n\n    accumulator[language] = i18nInFile;\n    return accumulator;\n  }, {});\n}\n\nexport function writeMissingToLanguage (resolvedLanguageFiles: string, missingKeys: I18NItem[]): void {\n  const languageFiles = readLangFiles(resolvedLanguageFiles);\n  languageFiles.forEach(languageFile => {\n    const languageFileContent = JSON.parse(languageFile.content);\n\n    missingKeys.forEach(item => {\n      if (item.language && languageFile.fileName.includes(item.language) || !item.language) {\n        dot.str(item.path, '', languageFileContent);\n      }\n    });\n\n    const fileExtension = languageFile.fileName.substring(languageFile.fileName.lastIndexOf('.') + 1);\n    const filePath = path.resolve(process.cwd() + languageFile.fileName);\n    const stringifiedContent = JSON.stringify(languageFileContent, null, 2);\n\n    if (fileExtension === 'json') {\n      fs.writeFileSync(filePath, stringifiedContent);\n    } else if (fileExtension === 'js') {\n      const jsFile = `export default ${stringifiedContent}; \\n`;\n      fs.writeFileSync(filePath, jsFile);\n    } else if (fileExtension === 'yaml' || fileExtension === 'yml') {\n      const yamlFile = yaml.safeDump(languageFileContent);\n      fs.writeFileSync(filePath, yamlFile);\n    }\n  });\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NLanguage, I18NReport } from '../types';\n\nexport enum VueI18NExtractReportTypes {\n  None = 0,\n  Missing = 1 << 0,\n  Unused = 1 << 1,\n  Dynamic = 1 << 2,\n  All = ~(~0 << 3)\n};\n\nconst mightBeUsedDynamically = function (languageItem: I18NItem, dynamicKeys: I18NItem[]): boolean {\n  return dynamicKeys.some(dynamicKey => languageItem.path.includes(dynamicKey.path));\n}\n\nexport function extractI18NReport (parsedVueFiles: I18NItem[], parsedLanguageFiles: I18NLanguage, reportType: VueI18NExtractReportTypes = VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n  const dynamicKeys: I18NItem[] = [];\n  const dynamicReportEnabled = reportType & VueI18NExtractReportTypes.Dynamic;\n\n  Object.keys(parsedLanguageFiles).forEach(language => {\n    let languageItems = parsedLanguageFiles[language];\n\n    parsedVueFiles.forEach(vueItem => {\n      const usedByVueItem = function (languageItem: I18NItem): boolean {\n        return languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.');\n      }\n\n      if (dynamicReportEnabled && (vueItem.path.includes('${') || vueItem.path.endsWith('.'))) {\n        dynamicKeys.push(({ ...vueItem, language }))\n        return\n      }\n\n      if (!parsedLanguageFiles[language].some(usedByVueItem)) {\n        missingKeys.push(({ ...vueItem, language }));\n      }\n\n      languageItems = languageItems.filter(languageItem => dynamicReportEnabled ?\n        !mightBeUsedDynamically(languageItem, dynamicKeys) && !usedByVueItem(languageItem) :\n        !usedByVueItem(languageItem));\n    });\n\n    unusedKeys.push(...languageItems.map((item) => ({ ...item, language })));\n  });\n\n  let extracts = {};\n  if (reportType & VueI18NExtractReportTypes.Missing) {\n    extracts = Object.assign(extracts, { missingKeys });\n  }\n  if (reportType & VueI18NExtractReportTypes.Unused) {\n    extracts = Object.assign(extracts, { unusedKeys });\n  }\n  if (dynamicReportEnabled) {\n    extracts = Object.assign(extracts, { dynamicKeys });\n  }\n\n  return extracts;\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\n\nimport { ReportOptions, I18NReport } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, writeMissingToLanguage } from './language-files';\nimport { extractI18NReport, VueI18NExtractReportTypes, writeReportToFile } from './report';\n\nexport function createI18NReport (vueFiles: string, languageFiles: string, command: ReportOptions): I18NReport {\n  const resolvedVueFiles = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles = parseLanguageFiles(resolvedLanguageFiles);\n\n  const reportType = command.dynamic ? VueI18NExtractReportTypes.All : (VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused);\n\n  return extractI18NReport(parsedVueFiles, parsedLanguageFiles, reportType);\n}\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add, dynamic } = command;\n\n  const report = createI18NReport(vueFiles, languageFiles, command);\n\n  if (report.missingKeys) console.info('missing keys: '), console.table(report.missingKeys);\n  if (report.unusedKeys) console.info('unused keys: '), console.table(report.unusedKeys);\n  if (report.dynamicKeys && dynamic && dynamic > 1) console.info('dynamic detected keys: '), console.table(report.dynamicKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.log(`The report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys && report.missingKeys.length > 0) {\n    const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n    writeMissingToLanguage(resolvedLanguageFiles, report.missingKeys);\n    console.log('The missing keys have been added to your languages files');\n  }\n}\n\nexport * from './vue-files';\nexport * from './language-files';\nexport * from './report';\n","import * as report from './report-command';\n\nexport * from './types';\nexport * from './report-command';\n\n// Needed for compatibility with versions < 1.1.0 of vue-i18n-extract.\nexport default {\n  ...report\n};\n"],"names":["readVueFiles","src","isValidGlob","Error","targetFiles","glob","sync","length","map","f","fileName","replace","process","cwd","path","content","fs","readFileSync","getMatches","file","regExp","captureGroup","match","exec","line","substring","index","extractMethodMatches","methodRegExp","extractComponentMatches","componentRegExp","extractDirectiveMatches","directiveRegExp","extractI18nItemsFromVueFiles","sourceFiles","reduce","accumulator","methodMatches","componentMatches","directiveMatches","parseVueFiles","vueFilesPath","filesList","readLangFiles","langPath","resolve","extension","lastIndexOf","toLowerCase","isJSON","isYAML","langObj","JSON","parse","yaml","safeLoad","eval","stringify","extractI18nItemsFromLanguageFiles","languageFiles","language","flattenedObject","dot","i18nInFile","Object","keys","key","writeMissingToLanguage","resolvedLanguageFiles","missingKeys","forEach","languageFile","languageFileContent","item","includes","str","fileExtension","filePath","stringifiedContent","writeFileSync","jsFile","yamlFile","safeDump","parseLanguageFiles","languageFilesPath","VueI18NExtractReportTypes","mightBeUsedDynamically","languageItem","dynamicKeys","some","dynamicKey","extractI18NReport","parsedVueFiles","parsedLanguageFiles","reportType","Missing","Unused","unusedKeys","dynamicReportEnabled","Dynamic","languageItems","vueItem","usedByVueItem","startsWith","endsWith","push","filter","extracts","assign","writeReportToFile","report","writePath","reportString","Promise","reject","writeFile","err","createI18NReport","vueFiles","command","resolvedVueFiles","dynamic","All","reportCommand","output","add","console","info","table","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;SAKgBA,aAAcC;AAC5B,MAAI,CAACC,WAAW,CAACD,GAAD,CAAhB,EAAuB;AACrB,UAAM,IAAIE,KAAJ,uCAAA,CAAN;AACD;;AAED,QAAMC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUL,GAAV,CAApB;;AAEA,MAAIG,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,UAAM,IAAIJ,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,SAAOC,WAAW,CAACI,GAAZ,CAAiBC,CAAD;AACrB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,EAAzB,CAAjB;AACA,WAAO;AAAEH,MAAAA,QAAF;AAAYI,MAAAA,IAAI,EAAEL,CAAlB;AAAqBM,MAAAA,OAAO,EAAEC,EAAE,CAACC,YAAH,CAAgBR,CAAhB,EAAmB,MAAnB;AAA9B,KAAP;AACD,GAHM,CAAP;AAID;;AAED,UAAUS,UAAV,CAAsBC,IAAtB,EAAwCC,MAAxC,EAAwDC,YAAY,GAAG,CAAvE;AACE,SAAO,IAAP,EAAa;AACX,UAAMC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYJ,IAAI,CAACJ,OAAjB,CAAd;;AACA,QAAIO,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;;AACD,UAAME,IAAI,GAAG,CAACL,IAAI,CAACJ,OAAL,CAAaU,SAAb,CAAuB,CAAvB,EAA0BH,KAAK,CAACI,KAAhC,EAAuCJ,KAAvC,CAA6C,KAA7C,KAAuD,EAAxD,EAA4Df,MAA5D,GAAqE,CAAlF;AACA,UAAM;AACJO,MAAAA,IAAI,EAAEQ,KAAK,CAACD,YAAD,CADP;AAEJG,MAAAA,IAFI;AAGJL,MAAAA,IAAI,EAAEA,IAAI,CAACT;AAHP,KAAN;AAKD;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AAuBC,SAASiB,oBAAT,CAA+BR,IAA/B;AACC,QAAMS,YAAY,GAAG,+CAArB;AACA,SAAO,CAAE,GAAGV,UAAU,CAACC,IAAD,EAAOS,YAAP,EAAqB,CAArB,CAAf,CAAP;AACD;;AAED,SAASC,uBAAT,CAAkCV,IAAlC;AACE,QAAMW,eAAe,GAAG,gDAAxB;AACA,SAAO,CAAE,GAAGZ,UAAU,CAACC,IAAD,EAAOW,eAAP,EAAwB,CAAxB,CAAf,CAAP;AACD;;AAED,SAASC,uBAAT,CAAkCZ,IAAlC;AACE,QAAMa,eAAe,GAAG,gBAAxB;AACA,SAAO,CAAE,GAAGd,UAAU,CAACC,IAAD,EAAOa,eAAP,CAAf,CAAP;AACD;;AAED,SAASC,4BAAT,CAAuCC,WAAvC;AACE,SAAOA,WAAW,CAACC,MAAZ,CAAmB,CAACC,WAAD,EAAcjB,IAAd;AACxB,UAAMkB,aAAa,GAAGV,oBAAoB,CAACR,IAAD,CAA1C;AACA,UAAMmB,gBAAgB,GAAGT,uBAAuB,CAACV,IAAD,CAAhD;AACA,UAAMoB,gBAAgB,GAAGR,uBAAuB,CAACZ,IAAD,CAAhD;AACA,WAAO,CACL,GAAGiB,WADE,EAEL,GAAGC,aAFE,EAGL,GAAGC,gBAHE,EAIL,GAAGC,gBAJE,CAAP;AAMD,GAVM,EAUJ,EAVI,CAAP;AAWD;;SAEeC,cAAeC;AAC7B,QAAMC,SAAS,GAAG1C,YAAY,CAACyC,YAAD,CAA9B;AACA,SAAOR,4BAA4B,CAACS,SAAD,CAAnC;AACD;;ACpFD,SAASC,aAAT,CAAwB1C,GAAxB;AACE,MAAI,CAACC,WAAW,CAACD,GAAD,CAAhB,EAAuB;AACrB,UAAM,IAAIE,KAAJ,4CAAA,CAAN;AACD;;AAED,QAAMC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUL,GAAV,CAApB;;AAEA,MAAIG,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,UAAM,IAAIJ,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,SAAOC,WAAW,CAACI,GAAZ,CAAgBC,CAAC;AACtB,UAAMmC,QAAQ,GAAG9B,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,EAAb,EAA4BJ,CAA5B,CAAjB;AAEA,UAAMqC,SAAS,GAAGF,QAAQ,CAACnB,SAAT,CAAmBmB,QAAQ,CAACG,WAAT,CAAqB,GAArB,CAAnB,EAA8CC,WAA9C,EAAlB;AACA,UAAMC,MAAM,GAAGH,SAAS,KAAK,OAA7B;AACA,UAAMI,MAAM,GAAGJ,SAAS,KAAK,OAAd,IAAyBA,SAAS,KAAK,MAAtD;AAEA,QAAIK,OAAJ;;AACA,QAAIF,MAAJ,EAAY;AACVE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWrC,EAAE,CAACC,YAAH,CAAgB2B,QAAhB,EAA0B,MAA1B,CAAX,CAAV;AACD,KAFD,MAEO,IAAIM,MAAJ,EAAY;AACjBC,MAAAA,OAAO,GAAGG,IAAI,CAACC,QAAL,CAAcvC,EAAE,CAACC,YAAH,CAAgB2B,QAAhB,EAA0B,MAA1B,CAAd,CAAV;AACD,KAFM,MAEA;AACLO,MAAAA,OAAO,GAAGK,IAAI,CAACxC,EAAE,CAACC,YAAH,CAAgB2B,QAAhB,EAA0B,MAA1B,CAAD,CAAd;AACD;;AAED,UAAMlC,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,EAAzB,CAAjB;AAEA,WAAO;AAAEH,MAAAA,QAAF;AAAYI,MAAAA,IAAI,EAAEL,CAAlB;AAAqBM,MAAAA,OAAO,EAAEqC,IAAI,CAACK,SAAL,CAAeN,OAAf;AAA9B,KAAP;AACD,GAnBM,CAAP;AAoBD;;AAED,SAASO,iCAAT,CAA4CC,aAA5C;AACE,SAAOA,aAAa,CAACxB,MAAd,CAAqB,CAACC,WAAD,EAAcjB,IAAd;AAC1B,UAAMyC,QAAQ,GAAGzC,IAAI,CAACT,QAAL,CAAce,SAAd,CAAwBN,IAAI,CAACT,QAAL,CAAcqC,WAAd,CAA0B,GAA1B,IAAiC,CAAzD,EAA4D5B,IAAI,CAACT,QAAL,CAAcqC,WAAd,CAA0B,GAA1B,CAA5D,CAAjB;AAEA,UAAMc,eAAe,GAAGC,GAAG,CAACA,GAAJ,CAAQV,IAAI,CAACC,KAAL,CAAWlC,IAAI,CAACJ,OAAhB,CAAR,CAAxB;AACA,UAAMgD,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYJ,eAAZ,EAA6BrD,GAA7B,CAAiC,CAAC0D,GAAD,EAAMxC,KAAN;AAClD,aAAO;AACLF,QAAAA,IAAI,EAAEE,KADD;AAELZ,QAAAA,IAAI,EAAEoD,GAFD;AAGL/C,QAAAA,IAAI,EAAEA,IAAI,CAACT;AAHN,OAAP;AAKD,KANkB,CAAnB;AAQA0B,IAAAA,WAAW,CAACwB,QAAD,CAAX,GAAwBG,UAAxB;AACA,WAAO3B,WAAP;AACD,GAdM,EAcJ,EAdI,CAAP;AAeD;;AAED,SAAgB+B,uBAAwBC,uBAA+BC;AACrE,QAAMV,aAAa,GAAGhB,aAAa,CAACyB,qBAAD,CAAnC;AACAT,EAAAA,aAAa,CAACW,OAAd,CAAsBC,YAAY;AAChC,UAAMC,mBAAmB,GAAGpB,IAAI,CAACC,KAAL,CAAWkB,YAAY,CAACxD,OAAxB,CAA5B;AAEAsD,IAAAA,WAAW,CAACC,OAAZ,CAAoBG,IAAI;AACtB,UAAIA,IAAI,CAACb,QAAL,IAAiBW,YAAY,CAAC7D,QAAb,CAAsBgE,QAAtB,CAA+BD,IAAI,CAACb,QAApC,CAAjB,IAAkE,CAACa,IAAI,CAACb,QAA5E,EAAsF;AACpFE,QAAAA,GAAG,CAACa,GAAJ,CAAQF,IAAI,CAAC3D,IAAb,EAAmB,EAAnB,EAAuB0D,mBAAvB;AACD;AACF,KAJD;AAMA,UAAMI,aAAa,GAAGL,YAAY,CAAC7D,QAAb,CAAsBe,SAAtB,CAAgC8C,YAAY,CAAC7D,QAAb,CAAsBqC,WAAtB,CAAkC,GAAlC,IAAyC,CAAzE,CAAtB;AACA,UAAM8B,QAAQ,GAAG/D,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,KAAgB0D,YAAY,CAAC7D,QAA1C,CAAjB;AACA,UAAMoE,kBAAkB,GAAG1B,IAAI,CAACK,SAAL,CAAee,mBAAf,EAAoC,IAApC,EAA0C,CAA1C,CAA3B;;AAEA,QAAII,aAAa,KAAK,MAAtB,EAA8B;AAC5B5D,MAAAA,EAAE,CAAC+D,aAAH,CAAiBF,QAAjB,EAA2BC,kBAA3B;AACD,KAFD,MAEO,IAAIF,aAAa,KAAK,IAAtB,EAA4B;AACjC,YAAMI,MAAM,qBAAqBF,wBAAjC;AACA9D,MAAAA,EAAE,CAAC+D,aAAH,CAAiBF,QAAjB,EAA2BG,MAA3B;AACD,KAHM,MAGA,IAAIJ,aAAa,KAAK,MAAlB,IAA4BA,aAAa,KAAK,KAAlD,EAAyD;AAC9D,YAAMK,QAAQ,GAAG3B,IAAI,CAAC4B,QAAL,CAAcV,mBAAd,CAAjB;AACAxD,MAAAA,EAAE,CAAC+D,aAAH,CAAiBF,QAAjB,EAA2BI,QAA3B;AACD;AACF,GAtBD;AAuBD;AAED,SAAgBE,mBAAoBC;AAClC,QAAM1C,SAAS,GAAGC,aAAa,CAACyC,iBAAD,CAA/B;AACA,SAAO1B,iCAAiC,CAAChB,SAAD,CAAxC;AACD;;ICtFW2C,yBAAZ;;AAAA,WAAYA;AACVA,EAAAA,gEAAA,SAAA;AACAA,EAAAA,mEAAA,YAAA;AACAA,EAAAA,kEAAA,WAAA;AACAA,EAAAA,mEAAA,YAAA;AACAA,EAAAA,+DAAA,QAAA;AACD,CAND,EAAYA,yBAAyB,KAAzBA,yBAAyB,KAAA,CAArC;;AAQA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,YAAV,EAAkCC,WAAlC;AAC7B,SAAOA,WAAW,CAACC,IAAZ,CAAiBC,UAAU,IAAIH,YAAY,CAACzE,IAAb,CAAkB4D,QAAlB,CAA2BgB,UAAU,CAAC5E,IAAtC,CAA/B,CAAP;AACD,CAFD;;AAIA,SAAgB6E,kBAAmBC,gBAA4BC,qBAAmCC,aAAwCT,yBAAyB,CAACU,OAA1B,GAAoCV,yBAAyB,CAACW;AACtM,QAAM3B,WAAW,GAAe,EAAhC;AACA,QAAM4B,UAAU,GAAe,EAA/B;AACA,QAAMT,WAAW,GAAe,EAAhC;AACA,QAAMU,oBAAoB,GAAGJ,UAAU,GAAGT,yBAAyB,CAACc,OAApE;AAEAnC,EAAAA,MAAM,CAACC,IAAP,CAAY4B,mBAAZ,EAAiCvB,OAAjC,CAAyCV,QAAQ;AAC/C,QAAIwC,aAAa,GAAGP,mBAAmB,CAACjC,QAAD,CAAvC;AAEAgC,IAAAA,cAAc,CAACtB,OAAf,CAAuB+B,OAAO;AAC5B,YAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUf,YAAV;AACpB,eAAOA,YAAY,CAACzE,IAAb,KAAsBuF,OAAO,CAACvF,IAA9B,IAAsCyE,YAAY,CAACzE,IAAb,CAAkByF,UAAlB,CAA6BF,OAAO,CAACvF,IAAR,GAAe,GAA5C,CAA7C;AACD,OAFD;;AAIA,UAAIoF,oBAAoB,KAAKG,OAAO,CAACvF,IAAR,CAAa4D,QAAb,CAAsB,IAAtB,KAA+B2B,OAAO,CAACvF,IAAR,CAAa0F,QAAb,CAAsB,GAAtB,CAApC,CAAxB,EAAyF;AACvFhB,QAAAA,WAAW,CAACiB,IAAZ,cAAuBJ,OAAvB;AAAgCzC,UAAAA;AAAhC;AACA;AACD;;AAED,UAAI,CAACiC,mBAAmB,CAACjC,QAAD,CAAnB,CAA8B6B,IAA9B,CAAmCa,aAAnC,CAAL,EAAwD;AACtDjC,QAAAA,WAAW,CAACoC,IAAZ,cAAuBJ,OAAvB;AAAgCzC,UAAAA;AAAhC;AACD;;AAEDwC,MAAAA,aAAa,GAAGA,aAAa,CAACM,MAAd,CAAqBnB,YAAY,IAAIW,oBAAoB,GACvE,CAACZ,sBAAsB,CAACC,YAAD,EAAeC,WAAf,CAAvB,IAAsD,CAACc,aAAa,CAACf,YAAD,CADG,GAEvE,CAACe,aAAa,CAACf,YAAD,CAFA,CAAhB;AAGD,KAjBD;AAmBAU,IAAAA,UAAU,CAACQ,IAAX,CAAgB,GAAGL,aAAa,CAAC5F,GAAd,CAAmBiE,IAAD,iBAAgBA,IAAhB;AAAsBb,MAAAA;AAAtB,MAAlB,CAAnB;AACD,GAvBD;AAyBA,MAAI+C,QAAQ,GAAG,EAAf;;AACA,MAAIb,UAAU,GAAGT,yBAAyB,CAACU,OAA3C,EAAoD;AAClDY,IAAAA,QAAQ,GAAG3C,MAAM,CAAC4C,MAAP,CAAcD,QAAd,EAAwB;AAAEtC,MAAAA;AAAF,KAAxB,CAAX;AACD;;AACD,MAAIyB,UAAU,GAAGT,yBAAyB,CAACW,MAA3C,EAAmD;AACjDW,IAAAA,QAAQ,GAAG3C,MAAM,CAAC4C,MAAP,CAAcD,QAAd,EAAwB;AAAEV,MAAAA;AAAF,KAAxB,CAAX;AACD;;AACD,MAAIC,oBAAJ,EAA0B;AACxBS,IAAAA,QAAQ,GAAG3C,MAAM,CAAC4C,MAAP,CAAcD,QAAd,EAAwB;AAAEnB,MAAAA;AAAF,KAAxB,CAAX;AACD;;AAED,SAAOmB,QAAP;AACD;AAED,AAAO,eAAeE,iBAAf,CAAkCC,MAAlC,EAAsDC,SAAtD;AACL,QAAMC,YAAY,GAAG5D,IAAI,CAACK,SAAL,CAAeqD,MAAf,CAArB;AACA,SAAO,IAAIG,OAAJ,CAAY,CAACpE,OAAD,EAAUqE,MAAV;AACjBlG,IAAAA,EAAE,CAACmG,SAAH,CACEJ,SADF,EAEEC,YAFF,EAGGI,GAAD;AACE,UAAIA,GAAJ,EAAS;AACPF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACA;AACD;;AACDvE,MAAAA,OAAO;AACR,KATH;AAWD,GAZM,CAAP;AAaD;;SCpEewE,iBAAkBC,UAAkB3D,eAAuB4D;AACzE,QAAMC,gBAAgB,GAAG1G,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,EAAb,EAA4ByG,QAA5B,CAAzB;AACA,QAAMlD,qBAAqB,GAAGtD,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,EAAb,EAA4B8C,aAA5B,CAA9B;AAEA,QAAMiC,cAAc,GAAGpD,aAAa,CAACgF,gBAAD,CAApC;AACA,QAAM3B,mBAAmB,GAAGV,kBAAkB,CAACf,qBAAD,CAA9C;AAEA,QAAM0B,UAAU,GAAGyB,OAAO,CAACE,OAAR,GAAkBpC,yBAAyB,CAACqC,GAA5C,GAAmDrC,yBAAyB,CAACU,OAA1B,GAAoCV,yBAAyB,CAACW,MAApI;AAEA,SAAOL,iBAAiB,CAACC,cAAD,EAAiBC,mBAAjB,EAAsCC,UAAtC,CAAxB;AACD;AAED,AAAO,eAAe6B,aAAf,CAA8BJ,OAA9B;AACL,QAAM;AAAED,IAAAA,QAAF;AAAY3D,IAAAA,aAAZ;AAA2BiE,IAAAA,MAA3B;AAAmCC,IAAAA,GAAnC;AAAwCJ,IAAAA;AAAxC,MAAoDF,OAA1D;AAEA,QAAMT,MAAM,GAAGO,gBAAgB,CAACC,QAAD,EAAW3D,aAAX,EAA0B4D,OAA1B,CAA/B;AAEA,MAAIT,MAAM,CAACzC,WAAX,EAAwByD,OAAO,CAACC,IAAR,CAAa,gBAAb,GAAgCD,OAAO,CAACE,KAAR,CAAclB,MAAM,CAACzC,WAArB,CAAhC;AACxB,MAAIyC,MAAM,CAACb,UAAX,EAAuB6B,OAAO,CAACC,IAAR,CAAa,eAAb,GAA+BD,OAAO,CAACE,KAAR,CAAclB,MAAM,CAACb,UAArB,CAA/B;AACvB,MAAIa,MAAM,CAACtB,WAAP,IAAsBiC,OAAtB,IAAiCA,OAAO,GAAG,CAA/C,EAAkDK,OAAO,CAACC,IAAR,CAAa,yBAAb,GAAyCD,OAAO,CAACE,KAAR,CAAclB,MAAM,CAACtB,WAArB,CAAzC;;AAElD,MAAIoC,MAAJ,EAAY;AACV,UAAMf,iBAAiB,CAACC,MAAD,EAAShG,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,EAAb,EAA4B+G,MAA5B,CAAT,CAAvB;AACAE,IAAAA,OAAO,CAACG,GAAR,0CAAqDL,QAArD;AACD;;AAED,MAAIC,GAAG,IAAIf,MAAM,CAACzC,WAAd,IAA6ByC,MAAM,CAACzC,WAAP,CAAmB9D,MAAnB,GAA4B,CAA7D,EAAgE;AAC9D,UAAM6D,qBAAqB,GAAGtD,IAAI,CAAC+B,OAAL,CAAajC,OAAO,CAACC,GAAR,EAAb,EAA4B8C,aAA5B,CAA9B;AACAQ,IAAAA,sBAAsB,CAACC,qBAAD,EAAwB0C,MAAM,CAACzC,WAA/B,CAAtB;AACAyD,IAAAA,OAAO,CAACG,GAAR,CAAY,0DAAZ;AACD;AACF;;;;;;;;;;;;;;;AChCD,yBACKnB,MADL;;;;;"}