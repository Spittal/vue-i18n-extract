{"version":3,"file":"vue-i18n-extract.modern.js","sources":["../src/config-file/vue-i18n-extract.config.js","../src/config-file/index.ts","../src/report-command/vue-files.ts","../src/report-command/language-files.ts","../src/report-command/report.ts","../src/report-command/index.ts"],"sourcesContent":["export default {\n  // Options documented in vue-i18n-extract readme.\n  vueFiles: './src/**/*.?(js|vue)',\n  languageFiles: './lang/**/*.?(json|yaml|yml|js)',\n  output: false,\n  add: false,\n  ci: false,\n};\n","import fs from 'fs';\nimport path from 'path';\nimport defaultConfig from './vue-i18n-extract.config.js';\n\nexport function initCommand(): void {\n  fs.writeFileSync(\n    path.resolve(process.cwd(), './vue-i18n-extract.config.js'),\n    `module.exports = ${JSON.stringify(defaultConfig, null, 2)}`,\n  );\n}\n\nexport function resolveConfig (): string[] {\n  try {\n    const pathToConfigFile = path.resolve(process.cwd(), './vue-i18n-extract.config.js');\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const configFile = require(pathToConfigFile);\n\n    console.info(`\\n[vue-i18n-extract] Using config file found at ${pathToConfigFile}\\n`);\n\n    const argsFromConfigFile: string[] = Object.keys(configFile).map(key => `--${key}`).reduce((accumulator, key, index) => {\n      const value = Object.values(configFile)[index];\n      if (value) {\n        return [\n          ...accumulator,\n          key,\n          ...((value === true) ? [] : [value]) as string[],\n        ];\n      }\n      return accumulator;\n    }, [] as string[]);\n\n    const argv = [\n      ...process.argv,\n      ...argsFromConfigFile,\n    ];\n\n    return argv;\n  } catch (e) {\n    return process.argv;\n  }\n}\n","import { SimpleFile, I18NItemWithBounding } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nexport function readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`vueFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItemWithBounding> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const path = match[captureGroup];\n\n    const pathAtIndex = file.content.indexOf(path);\n    const previousCharacter = file.content.charAt(pathAtIndex - 1);\n    const nextCharacter = file.content.charAt(pathAtIndex + path.length);\n\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path,\n      previousCharacter,\n      nextCharacter,\n      file: file.fileName,\n      line,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItemWithBounding[] {\n  const methodRegExp = /(?:[$ .]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItemWithBounding[] {\n  const componentRegExp = /(?:<i18n)(?:.|\\n)*?(?:[^:]path=(\"|'))((?:[^\\\\]|\\\\.)*?)\\1/gi;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItemWithBounding[] {\n  const directiveRegExp = /v-t=\"'((?:[^\\\\]|\\\\.)*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItemWithBounding[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItemWithBounding[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItemWithBounding[] {\n  const filesList = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { SimpleFile, I18NLanguage, I18NItem } from '../types';\n\nfunction readLangFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`languageFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isJSON = extension === '.json';\n    const isYAML = extension === '.yaml' || extension === '.yml';\n\n    let langObj;\n    if (isJSON) {\n      langObj = JSON.parse(fs.readFileSync(langPath, 'utf8'));\n    } else if (isYAML) {\n      langObj = yaml.load(fs.readFileSync(langPath, 'utf8'));\n    } else {\n      langObj = eval(fs.readFileSync(langPath, 'utf8'));\n    }\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { path: f, fileName, content: JSON.stringify(langObj) };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: SimpleFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    if (!accumulator[language]) {\n      accumulator[language] = [];\n    }\n\n    const flattenedObject = dot.dot(JSON.parse(file.content));\n    Object.keys(flattenedObject).forEach((key, index) => {\n      accumulator[language].push({\n        path: key,\n        file: file.fileName,\n        line: index,\n      });\n    });\n\n    return accumulator;\n  }, {});\n}\n\nexport function writeMissingToLanguage (resolvedLanguageFiles: string, missingKeys: I18NItem[]): void {\n  const languageFiles = readLangFiles(resolvedLanguageFiles);\n  languageFiles.forEach(languageFile => {\n    const languageFileContent = JSON.parse(languageFile.content);\n\n    missingKeys.forEach(item => {\n      if (item.language && languageFile.fileName.includes(item.language) || !item.language) {\n        dot.str(item.path, '', languageFileContent);\n      }\n    });\n\n    const fileExtension = languageFile.fileName.substring(languageFile.fileName.lastIndexOf('.') + 1);\n    const filePath = languageFile.path;\n    const stringifiedContent = JSON.stringify(languageFileContent, null, 2);\n\n    if (fileExtension === 'json') {\n      fs.writeFileSync(filePath, stringifiedContent);\n    } else if (fileExtension === 'js') {\n      const jsFile = `export default ${stringifiedContent}; \\n`;\n      fs.writeFileSync(filePath, jsFile);\n    } else if (fileExtension === 'yaml' || fileExtension === 'yml') {\n      const yamlFile = yaml.dump(languageFileContent);\n      fs.writeFileSync(filePath, yamlFile);\n    }\n  });\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NItemWithBounding, I18NLanguage, I18NReport } from '../types';\n\nfunction stripBounding (item: I18NItemWithBounding): I18NItem {\n  return {\n    path: item.path,\n    file: item.file,\n    line: item.line,\n  }\n}\n\nfunction mightBeDynamic (item: I18NItemWithBounding): boolean {\n  return item.path.includes('${') && !!item.previousCharacter.match(/`/g) && !!item.nextCharacter.match(/`/g);\n}\n\n// Looping through the arays multiple times might not be the most effecient, but it's the easiest to read and debug. Which at this scales is an accepted trade-off.\nexport function extractI18NReport (vueItems: I18NItemWithBounding[], languageFiles: I18NLanguage): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n\n  const maybeDynamicKeys: I18NItem[] = vueItems\n    .filter(vueItem => mightBeDynamic(vueItem))\n    .map(vueItem => stripBounding(vueItem));\n\n  Object.keys(languageFiles).forEach(language => {\n    const languageItems = languageFiles[language];\n\n    const missingKeysInLanguage = vueItems\n      .filter(vueItem => !mightBeDynamic(vueItem))\n      .filter(vueItem => !languageItems.some(languageItem => vueItem.path === languageItem.path))\n      .map(vueItem => ({ ...stripBounding(vueItem), language }));\n\n    const unusedKeysInLanguage = languageItems\n      .filter(languageItem => !vueItems.some(vueItem => languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.')))\n      .map(languageItem => ({ ...languageItem, language }));\n\n    missingKeys.push(...missingKeysInLanguage);\n    unusedKeys.push(...unusedKeysInLanguage);\n  });\n\n  return {\n    missingKeys,\n    unusedKeys,\n    maybeDynamicKeys,\n  };\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\n\nimport { ReportOptions, I18NReport } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, writeMissingToLanguage } from './language-files';\nimport { extractI18NReport,  writeReportToFile } from './report';\n\nexport function createI18NReport (vueFiles: string, languageFiles: string): I18NReport {\n  const resolvedVueFiles = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles = parseLanguageFiles(resolvedLanguageFiles);\n\n  return extractI18NReport(parsedVueFiles, parsedLanguageFiles);\n}\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add, ci } = command;\n  const report = createI18NReport(vueFiles, languageFiles);\n\n  if (report.missingKeys.length) console.info('\\nMissing Keys'), console.table(report.missingKeys);\n  if (report.unusedKeys.length) console.info('\\nUnused Keys'), console.table(report.unusedKeys);\n  if (report.maybeDynamicKeys.length) console.warn('\\nSuspected Dynamic Keys Found\\nvue-i18n-extract does not compile Vue templates and therefore can not infer the correct key for the following keys.'), console.table(report.maybeDynamicKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.info(`\\nThe report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys.length) {\n    const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n    writeMissingToLanguage(resolvedLanguageFiles, report.missingKeys);\n    console.info('\\nThe missing keys have been added to your languages files');\n  }\n\n  if (ci && report.missingKeys.length) {\n    console.info(`[vue-i18n-extract] ${report.missingKeys.length} missing keys found.`);\n    process.exit(1);\n  }\n\n  console.log('hi');\n\n  process.exit(0);\n}\n\n\nexport * from './vue-files';\nexport * from './language-files';\nexport * from './report';\n"],"names":["vueFiles","languageFiles","output","add","ci","initCommand","fs","writeFileSync","path","resolve","process","cwd","JSON","stringify","defaultConfig","resolveConfig","pathToConfigFile","configFile","require","console","info","argsFromConfigFile","Object","keys","map","key","reduce","accumulator","index","value","values","argv","e","readVueFiles","src","isValidGlob","Error","targetFiles","glob","sync","length","f","fileName","replace","content","readFileSync","getMatches","file","regExp","captureGroup","match","exec","pathAtIndex","indexOf","previousCharacter","charAt","nextCharacter","line","substring","extractMethodMatches","methodRegExp","extractComponentMatches","componentRegExp","extractDirectiveMatches","directiveRegExp","extractI18nItemsFromVueFiles","sourceFiles","methodMatches","componentMatches","directiveMatches","parseVueFiles","vueFilesPath","filesList","readLangFiles","langPath","extension","lastIndexOf","toLowerCase","isJSON","isYAML","langObj","parse","yaml","load","eval","extractI18nItemsFromLanguageFiles","language","flattenedObject","dot","forEach","push","writeMissingToLanguage","resolvedLanguageFiles","missingKeys","languageFile","languageFileContent","item","includes","str","fileExtension","filePath","stringifiedContent","jsFile","yamlFile","dump","parseLanguageFiles","languageFilesPath","stripBounding","mightBeDynamic","extractI18NReport","vueItems","unusedKeys","maybeDynamicKeys","filter","vueItem","languageItems","missingKeysInLanguage","some","languageItem","unusedKeysInLanguage","startsWith","writeReportToFile","report","writePath","reportString","Promise","reject","writeFile","err","createI18NReport","resolvedVueFiles","parsedVueFiles","parsedLanguageFiles","reportCommand","command","table","warn","exit","log"],"mappings":"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"}