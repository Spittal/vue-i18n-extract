{"version":3,"file":"vue-i18n-extract.modern.js","sources":["../src/report-command/vue-files.ts","../src/report-command/report.ts","../src/report-command/language-files.ts","../src/index.ts","../src/report-command/index.ts"],"sourcesContent":["import { SimpleFile, I18NItem } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nfunction readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error('vueFiles isn\\'\\t a valid glob pattern.');\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItem> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path: match[captureGroup],\n      line,\n      file: file.fileName,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItem[] {\n  const methodRegExp = /(?:[$ .]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItem[] {\n  const componentRegExp = /(?:<i18n|<I18N)(?:.|\\n)*?(?:[^:]path=(\"|'))(.*?)\\1/g;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItem[] {\n  const directiveRegExp = /v-t=\"'(.*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItem[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItem[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItem[] {\n  const filesList: SimpleFile[] = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NLanguage, I18NReport } from '../types';\n\nexport enum VueI18NExtractReportTypes {\n  None = 0,\n  Missing = 1 << 0,\n  Unused = 1 << 1,\n  All = ~(~0 << 2)\n};\n\n\nexport function extractI18NReport (parsedVueFiles: I18NItem[], parsedLanguageFiles: I18NLanguage, reportType: VueI18NExtractReportTypes = VueI18NExtractReportTypes.All): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n\n  Object.keys(parsedLanguageFiles).forEach(language => {\n    let languageItems = parsedLanguageFiles[language];\n\n    parsedVueFiles.forEach(vueItem => {\n      const usedByVueItem = function (languageItem: I18NItem): boolean {\n        return languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.');\n      }\n\n      if (!parsedLanguageFiles[language].some(usedByVueItem)) {\n        missingKeys.push(({ ...vueItem, language }));\n      }\n\n      languageItems = languageItems.filter(languageItem => !usedByVueItem(languageItem));\n    });\n\n    unusedKeys.push(...languageItems.map((item) => ({ ...item, language })));\n  });\n\n  let extracts = {};\n  if (reportType & VueI18NExtractReportTypes.Missing) {\n    extracts = Object.assign(extracts, { missingKeys });\n  }\n  if (reportType & VueI18NExtractReportTypes.Unused) {\n    extracts = Object.assign(extracts, { unusedKeys });\n  }\n\n  return extracts;\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { SimpleFile, I18NLanguage, I18NItem } from '../types';\n\nimport esm from 'esm';\nrequire = esm(module);\n\nexport function readLangFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error('languageFiles isn\\'\\t a valid glob pattern.');\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isYaml = extension === '.yaml' || extension === '.yml';\n\n    const langModule = (isYaml) ? yaml.safeLoad(fs.readFileSync(langPath, 'utf8')) : require(langPath);\n    const langObj = (langModule.default) ? langModule.default : langModule;\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { fileName, path: f, content: langObj };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: SimpleFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    const flattenedObject = dot.dot(file.content);\n    const i18nInFile = Object.keys(flattenedObject).map((key, index) => {\n      return {\n        line: index,\n        path: key,\n        file: file.fileName,\n      };\n    });\n\n    accumulator[language] = i18nInFile;\n    return accumulator;\n  }, {});\n}\n\nexport function writeMissingToLanguage (resolvedLanguageFiles: string, missingKeys: I18NItem[]): void {\n  const globArray = glob.sync(resolvedLanguageFiles)\n  const parsedContent = globArray\n    .map(f => fs.readFileSync(f, 'utf8'))\n    .map(i => JSON.parse(i));\n\n  missingKeys.forEach(item => {\n    parsedContent.forEach(i => dot.str(item.path, '', i));\n  });\n\n  const stringifyiedContent = parsedContent\n    .map(i => JSON.stringify(i, null, 2));\n\n  stringifyiedContent\n    .forEach((i, index) => fs.writeFileSync(globArray[index], i));\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList: SimpleFile[] = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import { Command } from 'commander';\nimport { reportCommand } from './report-command';\n\nconst program = new Command();\nprogram\n  .command('report', { isDefault: true })\n  .description('Create a report from a glob of your Vue.js source files and your language files.')\n  .requiredOption(\n    '-v, --vueFiles <vueFiles>',\n    'The Vue.js file(s) you want to extract i18n strings from. It can be a path to a folder or to a file. It accepts glob patterns. (ex. *, ?, (pattern|pattern|pattern)',\n  )\n  .requiredOption(\n    '-l, --languageFiles <languageFiles>',\n    'The language file(s) you want to compare your Vue.js file(s) to. It can be a path to a folder or to a file. It accepts glob patterns (ex. *, ?, (pattern|pattern|pattern) ',\n  )\n  .option(\n    '-o, --output <output>',\n    'Use if you want to create a json file out of your report. (ex. -o output.json)',\n  )\n  .option(\n    '-a, --add',\n    'Use if you want to add missing keys into your json language files.',\n  )\n  .action(reportCommand);\n\nprogram.parseAsync(process.argv);\n","import path from 'path';\n\nimport { I18NItem, I18NLanguage, I18NReport, ReportOptions } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, writeMissingToLanguage } from './language-files';\nimport { extractI18NReport, writeReportToFile } from './report';\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add } = command;\n\n  const resolvedVueFiles: string = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles: string = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles: I18NItem[] = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles: I18NLanguage = parseLanguageFiles(resolvedLanguageFiles);\n\n  const report: I18NReport = extractI18NReport(parsedVueFiles, parsedLanguageFiles);\n\n  if (report.missingKeys) console.table(report.missingKeys);\n  if (report.unusedKeys) console.table(report.unusedKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.log(`The report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys && report.missingKeys.length > 0) {\n    writeMissingToLanguage(resolvedLanguageFiles, report.missingKeys)\n    console.log('The missing keys has been has been saved to your languages files');\n  }\n}\n"],"names":["getMatches","file","regExp","captureGroup","match","exec","content","line","substring","index","length","path","fileName","VueI18NExtractReportTypes","require","esm","module","program","Command","command","isDefault","description","requiredOption","option","action","vueFiles","languageFiles","output","add","resolvedVueFiles","resolve","process","cwd","resolvedLanguageFiles","report","parsedVueFiles","parsedLanguageFiles","reportType","All","missingKeys","unusedKeys","Object","keys","forEach","language","languageItems","vueItem","usedByVueItem","languageItem","startsWith","some","push","filter","map","item","extracts","Missing","assign","Unused","extractI18NReport","src","isValidGlob","Error","targetFiles","glob","sync","f","replace","fs","readFileSync","readVueFiles","reduce","accumulator","extractMethodMatches","extractComponentMatches","extractDirectiveMatches","langPath","extension","lastIndexOf","toLowerCase","langModule","yaml","safeLoad","langObj","default","readLangFiles","flattenedObject","dot","i18nInFile","key","console","table","writePath","reportString","JSON","stringify","Promise","reject","writeFile","err","writeReportToFile","log","globArray","parsedContent","i","parse","str","writeFileSync","writeMissingToLanguage","parseAsync","argv"],"mappings":"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"}