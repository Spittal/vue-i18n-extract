{"version":3,"file":"vue-i18n-extract.js","sources":["../src/init-command/index.ts","../src/report-command/vue-files.ts","../src/report-command/language-files.ts","../src/report-command/report.ts","../src/report-command/index.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport function initCommand(): void {\n  fs.writeFileSync(\n    path.resolve(process.cwd(), './vue-i18n-extract.config.js'),\n    fs.readFileSync(path.resolve(__dirname, './vue-i18n-extract.config.js'), 'utf8'),\n  );\n}\n\n","import { SimpleFile, I18NItem } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nexport function readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`vueFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItem> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path: match[captureGroup],\n      line,\n      file: file.fileName,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItem[] {\n  const methodRegExp = /(?:[$ .]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItem[] {\n  const componentRegExp = /(?:<i18n)(?:.|\\n)*?(?:[^:]path=(\"|'))(.*?)\\1/gi;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItem[] {\n  const directiveRegExp = /v-t=\"'(.*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItem[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItem[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItem[] {\n  const filesList = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { SimpleFile, I18NLanguage, I18NItem } from '../types';\n\nfunction readLangFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`languageFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isJSON = extension === '.json';\n    const isYAML = extension === '.yaml' || extension === '.yml';\n\n    let langObj;\n    if (isJSON) {\n      langObj = JSON.parse(fs.readFileSync(langPath, 'utf8'));\n    } else if (isYAML) {\n      langObj = yaml.load(fs.readFileSync(langPath, 'utf8'));\n    } else {\n      langObj = eval(fs.readFileSync(langPath, 'utf8'));\n    }\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { fileName, path: f, content: JSON.stringify(langObj) };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: SimpleFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    if (!accumulator[language]) {\n      accumulator[language] = [];\n    }\n\n    const flattenedObject = dot.dot(JSON.parse(file.content));\n    Object.keys(flattenedObject).forEach((key, index) => {\n      accumulator[language].push({\n        line: index,\n        path: key,\n        file: file.fileName,\n      });\n    });\n\n    return accumulator;\n  }, {});\n}\n\nexport function writeMissingToLanguage (resolvedLanguageFiles: string, missingKeys: I18NItem[]): void {\n  const languageFiles = readLangFiles(resolvedLanguageFiles);\n  languageFiles.forEach(languageFile => {\n    const languageFileContent = JSON.parse(languageFile.content);\n\n    missingKeys.forEach(item => {\n      if (item.language && languageFile.fileName.includes(item.language) || !item.language) {\n        dot.str(item.path, '', languageFileContent);\n      }\n    });\n\n    const fileExtension = languageFile.fileName.substring(languageFile.fileName.lastIndexOf('.') + 1);\n    const filePath = languageFile.path;\n    const stringifiedContent = JSON.stringify(languageFileContent, null, 2);\n\n    if (fileExtension === 'json') {\n      fs.writeFileSync(filePath, stringifiedContent);\n    } else if (fileExtension === 'js') {\n      const jsFile = `export default ${stringifiedContent}; \\n`;\n      fs.writeFileSync(filePath, jsFile);\n    } else if (fileExtension === 'yaml' || fileExtension === 'yml') {\n      const yamlFile = yaml.dump(languageFileContent);\n      fs.writeFileSync(filePath, yamlFile);\n    }\n  });\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NLanguage, I18NReport } from '../types';\n\nexport enum VueI18NExtractReportTypes {\n  None = 0,\n  Missing = 1 << 0,\n  Unused = 1 << 1,\n  Dynamic = 1 << 2,\n  All = ~(~0 << 3)\n};\n\nconst mightBeUsedDynamically = function (languageItem: I18NItem, dynamicKeys: I18NItem[]): boolean {\n  return dynamicKeys.some(dynamicKey => languageItem.path.includes(dynamicKey.path));\n}\n\nexport function extractI18NReport (parsedVueFiles: I18NItem[], parsedLanguageFiles: I18NLanguage, reportType: VueI18NExtractReportTypes = VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n  const dynamicKeys: I18NItem[] = [];\n  const dynamicReportEnabled = reportType & VueI18NExtractReportTypes.Dynamic;\n\n  Object.keys(parsedLanguageFiles).forEach(language => {\n    let languageItems = parsedLanguageFiles[language];\n\n    parsedVueFiles.forEach(vueItem => {\n      const usedByVueItem = function (languageItem: I18NItem): boolean {\n        return languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.');\n      }\n\n      if (dynamicReportEnabled && (vueItem.path.includes('${') || vueItem.path.endsWith('.'))) {\n        dynamicKeys.push(({ ...vueItem, language }))\n        return\n      }\n\n      if (!parsedLanguageFiles[language].some(usedByVueItem)) {\n        missingKeys.push(({ ...vueItem, language }));\n      }\n\n      languageItems = languageItems.filter(languageItem => dynamicReportEnabled ?\n        !mightBeUsedDynamically(languageItem, dynamicKeys) && !usedByVueItem(languageItem) :\n        !usedByVueItem(languageItem));\n    });\n\n    unusedKeys.push(...languageItems.map((item) => ({ ...item, language })));\n  });\n\n  let extracts = {};\n  if (reportType & VueI18NExtractReportTypes.Missing) {\n    extracts = Object.assign(extracts, { missingKeys });\n  }\n  if (reportType & VueI18NExtractReportTypes.Unused) {\n    extracts = Object.assign(extracts, { unusedKeys });\n  }\n  if (dynamicReportEnabled) {\n    extracts = Object.assign(extracts, { dynamicKeys });\n  }\n\n  return extracts;\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\nimport fs from 'fs';\n\nimport { ReportOptions, I18NReport } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, writeMissingToLanguage } from './language-files';\nimport { extractI18NReport, VueI18NExtractReportTypes, writeReportToFile } from './report';\n\nexport function createI18NReport (vueFiles: string, languageFiles: string, command: ReportOptions): I18NReport {\n  const resolvedVueFiles = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles = parseLanguageFiles(resolvedLanguageFiles);\n\n  const reportType = command.dynamic ? VueI18NExtractReportTypes.All : (VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused);\n\n  return extractI18NReport(parsedVueFiles, parsedLanguageFiles, reportType);\n}\n\nexport function reportFromConfigCommand(): Promise<void> | void {\n  try {\n    const configFile = eval(fs.readFileSync(path.resolve(process.cwd(), 'vue-i18n-extract.config.js'), 'utf8'));\n    return reportCommand({\n      vueFiles: configFile.vueFilesPath,\n      languageFiles: configFile.languageFilesPath,\n      ...(configFile.options.output && {output: configFile.options.output }),\n      ...(configFile.options.add && { add: Boolean(configFile.options.add) }),\n      ...(configFile.options.dynamic && {dynamic: [false, 'ignore', 'report'].findIndex(e => e === configFile.options.dynamic) }),\n    });\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add, dynamic, ci } = command;\n  const report = createI18NReport(vueFiles, languageFiles, command);\n\n  if (report.missingKeys) console.info('missing keys: '), console.table(report.missingKeys);\n  if (report.unusedKeys) console.info('unused keys: '), console.table(report.unusedKeys);\n  if (report.dynamicKeys && dynamic && dynamic > 1) console.info('dynamic detected keys: '), console.table(report.dynamicKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.log(`The report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys && report.missingKeys.length > 0) {\n    const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n    writeMissingToLanguage(resolvedLanguageFiles, report.missingKeys);\n    console.log('The missing keys have been added to your languages files');\n  }\n\n  if (ci && Object.prototype.hasOwnProperty.call(report, 'missingKeys') && report.missingKeys !== undefined) {\n    const exitCode = report.missingKeys.length > 0 ? 1 : 0;\n    console.log(`[vue-i18n-extract] ${report.missingKeys.length} missing keys found.`);\n    process.exit(exitCode);\n  }\n}\n\nexport * from './vue-files';\nexport * from './language-files';\nexport * from './report';\n"],"names":["initCommand","fs","writeFileSync","path","resolve","process","cwd","readFileSync","__dirname","readVueFiles","src","isValidGlob","Error","targetFiles","glob","sync","length","map","f","fileName","replace","content","getMatches","file","regExp","captureGroup","match","exec","line","substring","index","extractMethodMatches","methodRegExp","extractComponentMatches","componentRegExp","extractDirectiveMatches","directiveRegExp","extractI18nItemsFromVueFiles","sourceFiles","reduce","accumulator","methodMatches","componentMatches","directiveMatches","parseVueFiles","vueFilesPath","filesList","readLangFiles","langPath","extension","lastIndexOf","toLowerCase","isJSON","isYAML","langObj","JSON","parse","yaml","load","eval","stringify","extractI18nItemsFromLanguageFiles","languageFiles","language","flattenedObject","dot","Object","keys","forEach","key","push","writeMissingToLanguage","resolvedLanguageFiles","missingKeys","languageFile","languageFileContent","item","includes","str","fileExtension","filePath","stringifiedContent","jsFile","yamlFile","dump","parseLanguageFiles","languageFilesPath","VueI18NExtractReportTypes","mightBeUsedDynamically","languageItem","dynamicKeys","some","dynamicKey","extractI18NReport","parsedVueFiles","parsedLanguageFiles","reportType","Missing","Unused","unusedKeys","dynamicReportEnabled","Dynamic","languageItems","vueItem","usedByVueItem","startsWith","endsWith","filter","extracts","assign","writeReportToFile","report","writePath","reportString","Promise","reject","writeFile","err","createI18NReport","vueFiles","command","resolvedVueFiles","dynamic","All","reportFromConfigCommand","configFile","reportCommand","options","output","add","Boolean","findIndex","e","console","error","ci","info","table","log","prototype","hasOwnProperty","call","undefined","exitCode","exit"],"mappings":"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"}