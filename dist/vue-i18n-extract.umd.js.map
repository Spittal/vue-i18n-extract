{"version":3,"file":"vue-i18n-extract.umd.js","sources":["../src/report-command/vue-files.ts","../src/report-command/language-files.ts","../src/report-command/report.ts","../src/report-command/index.ts"],"sourcesContent":["import { SimpleFile, I18NItem } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nexport function readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`vueFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItem> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path: match[captureGroup],\n      line,\n      file: file.fileName,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItem[] {\n  const methodRegExp = /(?:[$ .]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItem[] {\n  const componentRegExp = /(?:<i18n|<I18N)(?:.|\\n)*?(?:[^:]path=(\"|'))(.*?)\\1/g;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItem[] {\n  const directiveRegExp = /v-t=\"'(.*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItem[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItem[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItem[] {\n  const filesList = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { SimpleFile, I18NLanguage, I18NItem } from '../types';\n\nimport esm from 'esm';\nrequire = esm(module);\n\nfunction readLangFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`languageFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isYaml = extension === '.yaml' || extension === '.yml';\n\n    const langModule = (isYaml) ? yaml.safeLoad(fs.readFileSync(langPath, 'utf8')) : require(langPath);\n    const langObj = (langModule.default) ? langModule.default : langModule;\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { fileName, path: f, content: JSON.stringify(langObj) };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: SimpleFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    const flattenedObject = dot.dot(JSON.parse(file.content));\n    const i18nInFile = Object.keys(flattenedObject).map((key, index) => {\n      return {\n        line: index,\n        path: key,\n        file: file.fileName,\n      };\n    });\n\n    accumulator[language] = i18nInFile;\n    return accumulator;\n  }, {});\n}\n\nexport function writeMissingToLanguage (resolvedLanguageFiles: string, missingKeys: I18NItem[]): void {\n  const languageFiles = readLangFiles(resolvedLanguageFiles);\n  languageFiles.forEach(languageFile => {\n    const languageFileContent = JSON.parse(languageFile.content);\n\n    missingKeys.forEach(item => {\n      if (item.language && languageFile.fileName.includes(item.language) || !item.language) {\n        dot.str(item.path, '', languageFileContent);\n      }\n    });\n\n    const fileExtension = languageFile.fileName.substring(languageFile.fileName.lastIndexOf('.') + 1);\n    const filePath = path.resolve(process.cwd() + languageFile.fileName);\n    const stringifiedContent = JSON.stringify(languageFileContent, null, 2);\n\n    if (fileExtension === 'json') {\n      fs.writeFileSync(filePath, stringifiedContent);\n    } else if (fileExtension === 'js') {\n      const jsFile = `export default ${stringifiedContent}; \\n`;\n      fs.writeFileSync(filePath, jsFile);\n    } else if (fileExtension === 'yaml' || fileExtension === 'yml') {\n      const yamlFile = yaml.safeDump(languageFileContent);\n      fs.writeFileSync(filePath, yamlFile);\n    }\n  });\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NLanguage, I18NReport } from '../types';\n\nexport enum VueI18NExtractReportTypes {\n  None = 0,\n  Missing = 1 << 0,\n  Unused = 1 << 1,\n  Dynamic = 1 << 2,\n  All = ~(~0 << 3)\n};\n\nconst mightBeUsedDynamically = function (languageItem: I18NItem, dynamicKeys: I18NItem[]): boolean {\n  return dynamicKeys.some(dynamicKey => languageItem.path.includes(dynamicKey.path));\n}\n\nexport function extractI18NReport (parsedVueFiles: I18NItem[], parsedLanguageFiles: I18NLanguage, reportType: VueI18NExtractReportTypes = VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n  const dynamicKeys: I18NItem[] = [];\n  const dynamicReportEnabled = reportType & VueI18NExtractReportTypes.Dynamic;\n\n  Object.keys(parsedLanguageFiles).forEach(language => {\n    let languageItems = parsedLanguageFiles[language];\n\n    parsedVueFiles.forEach(vueItem => {\n      const usedByVueItem = function (languageItem: I18NItem): boolean {\n        return languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.');\n      }\n\n      if (dynamicReportEnabled && (vueItem.path.includes('${') || vueItem.path.endsWith('.'))) {\n        dynamicKeys.push(({ ...vueItem, language }))\n        return\n      }\n\n      if (!parsedLanguageFiles[language].some(usedByVueItem)) {\n        missingKeys.push(({ ...vueItem, language }));\n      }\n\n      languageItems = languageItems.filter(languageItem => dynamicReportEnabled ?\n        !mightBeUsedDynamically(languageItem, dynamicKeys) && !usedByVueItem(languageItem) :\n        !usedByVueItem(languageItem));\n    });\n\n    unusedKeys.push(...languageItems.map((item) => ({ ...item, language })));\n  });\n\n  let extracts = {};\n  if (reportType & VueI18NExtractReportTypes.Missing) {\n    extracts = Object.assign(extracts, { missingKeys });\n  }\n  if (reportType & VueI18NExtractReportTypes.Unused) {\n    extracts = Object.assign(extracts, { unusedKeys });\n  }\n  if (dynamicReportEnabled) {\n    extracts = Object.assign(extracts, { dynamicKeys });\n  }\n\n  return extracts;\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\n\nimport { ReportOptions, I18NReport } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, writeMissingToLanguage } from './language-files';\nimport { extractI18NReport, VueI18NExtractReportTypes, writeReportToFile } from './report';\n\nexport function createI18NReport (vueFiles: string, languageFiles: string, command: ReportOptions): I18NReport {\n  const resolvedVueFiles = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles = parseLanguageFiles(resolvedLanguageFiles);\n\n  const reportType = command.dynamic ? VueI18NExtractReportTypes.All : (VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused);\n\n  return extractI18NReport(parsedVueFiles, parsedLanguageFiles, reportType);\n}\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add, dynamic } = command;\n\n  const report = createI18NReport(vueFiles, languageFiles, command);\n\n  if (report.missingKeys) console.info('missing keys: '), console.table(report.missingKeys);\n  if (report.unusedKeys) console.info('unused keys: '), console.table(report.unusedKeys);\n  if (report.dynamicKeys && dynamic && dynamic > 1) console.info('dynamic detected keys: '), console.table(report.dynamicKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.log(`The report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys && report.missingKeys.length > 0) {\n    const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n    writeMissingToLanguage(resolvedLanguageFiles, report.missingKeys);\n    console.log('The missing keys have been added to your languages files');\n  }\n}\n\nexport * from './vue-files';\nexport * from './language-files';\nexport * from './report';\n"],"names":["readVueFiles","src","isValidGlob","Error","targetFiles","glob","sync","length","map","f","fileName","replace","process","cwd","path","content","fs","readFileSync","getMatches","file","regExp","captureGroup","match","exec","line","substring","index","parseVueFiles","vueFilesPath","reduce","accumulator","extractMethodMatches","extractComponentMatches","extractDirectiveMatches","readLangFiles","langPath","resolve","extension","lastIndexOf","toLowerCase","langModule","yaml","safeLoad","require","langObj","default","JSON","stringify","writeMissingToLanguage","resolvedLanguageFiles","missingKeys","forEach","languageFile","languageFileContent","parse","item","language","includes","dot","str","fileExtension","filePath","stringifiedContent","writeFileSync","yamlFile","safeDump","parseLanguageFiles","languageFilesPath","flattenedObject","i18nInFile","Object","keys","key","VueI18NExtractReportTypes","extractI18NReport","parsedVueFiles","parsedLanguageFiles","reportType","Missing","Unused","unusedKeys","dynamicKeys","dynamicReportEnabled","Dynamic","languageItems","vueItem","usedByVueItem","languageItem","startsWith","endsWith","push","some","filter","dynamicKey","mightBeUsedDynamically","extracts","assign","writeReportToFile","report","writePath","reportString","Promise","reject","writeFile","err","createI18NReport","vueFiles","languageFiles","command","resolvedVueFiles","dynamic","All","reportCommand","output","add","console","info","table","log","esm","module"],"mappings":"upBAKgBA,EAAcC,GAC5B,IAAKC,EAAYD,GACf,UAAUE,8CAGZ,IAAMC,EAAcC,EAAKC,KAAKL,GAE9B,GAA2B,IAAvBG,EAAYG,OACd,UAAUJ,MAAM,+BAGlB,OAAOC,EAAYI,IAAKC,IAEf,CAAEC,SADQD,EAAEE,QAAQC,QAAQC,MAAO,IACvBC,KAAML,EAAGM,QAASC,EAAGC,aAAaR,EAAG,WAI5D,SAAUS,EAAYC,EAAkBC,EAAgBC,GACtD,aADsDA,IAAAA,EAAe,KACxD,CACX,IAAMC,EAAQF,EAAOG,KAAKJ,EAAKJ,SAC/B,GAAc,OAAVO,EACF,MAEF,IAAME,GAAQL,EAAKJ,QAAQU,UAAU,EAAGH,EAAMI,OAAOJ,MAAM,QAAU,IAAIf,OAAS,OAC5E,CACJO,KAAMQ,EAAMD,GACZG,KAAAA,EACAL,KAAMA,EAAKT,oBAyDDiB,EAAeC,GAE7B,OADkB5B,EAAa4B,GAdZC,OAAO,CAACC,EAAaX,IAI/B,IACFW,KArBR,SAA+BX,GAE9B,MAAO,IAAKD,EAAWC,EADF,gDACsB,IAenBY,CAAqBZ,MAZ/C,SAAkCA,GAEhC,MAAO,IAAKD,EAAWC,EADC,sDACsB,IAWnBa,CAAwBb,MARrD,SAAkCA,GAEhC,MAAO,IAAKD,EAAWC,EADC,mBAQGc,CAAwBd,IAOhD,IC3EL,SAASe,EAAejC,GACtB,IAAKC,EAAYD,GACf,UAAUE,mDAGZ,IAAMC,EAAcC,EAAKC,KAAKL,GAE9B,GAA2B,IAAvBG,EAAYG,OACd,UAAUJ,MAAM,oCAGlB,OAAOC,EAAYI,IAAIC,IACrB,IAAM0B,EAAWrB,EAAKsB,QAAQxB,QAAQC,MAAOJ,GAEvC4B,EAAYF,EAASV,UAAUU,EAASG,YAAY,MAAMC,cAG1DC,EAFuB,UAAdH,GAAuC,SAAdA,EAEVI,EAAKC,SAAS1B,EAAGC,aAAakB,EAAU,SAAWQ,QAAQR,GACnFS,EAAWJ,EAAWK,QAAWL,EAAWK,QAAUL,EAI5D,MAAO,CAAE9B,SAFQD,EAAEE,QAAQC,QAAQC,MAAO,IAEvBC,KAAML,EAAGM,QAAS+B,KAAKC,UAAUH,eAsBxCI,EAAwBC,EAA+BC,GAC/ChB,EAAce,GACtBE,QAAQC,IACpB,IAAMC,EAAsBP,KAAKQ,MAAMF,EAAarC,SAEpDmC,EAAYC,QAAQI,KACdA,EAAKC,UAAYJ,EAAa1C,SAAS+C,SAASF,EAAKC,YAAcD,EAAKC,WAC1EE,EAAIC,IAAIJ,EAAKzC,KAAM,GAAIuC,KAI3B,IAAMO,EAAgBR,EAAa1C,SAASe,UAAU2B,EAAa1C,SAAS4B,YAAY,KAAO,GACzFuB,EAAW/C,EAAKsB,QAAQxB,QAAQC,MAAQuC,EAAa1C,UACrDoD,EAAqBhB,KAAKC,UAAUM,EAAqB,KAAM,GAErE,GAAsB,SAAlBO,EACF5C,EAAG+C,cAAcF,EAAUC,WACA,OAAlBF,EAET5C,EAAG+C,cAAcF,oBADgBC,kBAEN,SAAlBF,GAA8C,QAAlBA,EAAyB,CAC9D,IAAMI,EAAWvB,EAAKwB,SAASZ,GAC/BrC,EAAG+C,cAAcF,EAAUG,MAKjC,SAAgBE,EAAoBC,GAElC,OADkBjC,EAAciC,GA7CXtC,OAAO,CAACC,EAAaX,KACxC,IAAMqC,EAAWrC,EAAKT,SAASe,UAAUN,EAAKT,SAAS4B,YAAY,KAAO,EAAGnB,EAAKT,SAAS4B,YAAY,MAEjG8B,EAAkBV,EAAIA,IAAIZ,KAAKQ,MAAMnC,EAAKJ,UAC1CsD,EAAaC,OAAOC,KAAKH,GAAiB5D,IAAI,CAACgE,EAAK9C,KACjD,CACLF,KAAME,EACNZ,KAAM0D,EACNrD,KAAMA,EAAKT,YAKf,OADAoB,EAAY0B,GAAYa,EACjBvC,GACN,QCjDO2C,EAYZ,SAAgBC,EAAmBC,EAA4BC,EAAmCC,YAAAA,IAAAA,EAAwCJ,4BAA0BK,QAAUL,4BAA0BM,QACtM,IAAM7B,EAA0B,GAC1B8B,EAAyB,GACzBC,EAA0B,GAC1BC,EAAuBL,EAAaJ,4BAA0BU,QAEpEb,OAAOC,KAAKK,GAAqBzB,QAAQK,IACvC,IAAI4B,EAAgBR,EAAoBpB,GAExCmB,EAAexB,QAAQkC,IACrB,IAAMC,EAAgB,SAAUC,GAC9B,OAAOA,EAAazE,OAASuE,EAAQvE,MAAQyE,EAAazE,KAAK0E,WAAWH,EAAQvE,KAAO,MAGvFoE,IAAyBG,EAAQvE,KAAK2C,SAAS,OAAS4B,EAAQvE,KAAK2E,SAAS,MAChFR,EAAYS,UAAWL,GAAS7B,SAAAA,MAI7BoB,EAAoBpB,GAAUmC,KAAKL,IACtCpC,EAAYwC,UAAWL,GAAS7B,SAAAA,KAGlC4B,EAAgBA,EAAcQ,OAAOL,GAAgBL,GA3B5B,SAAUK,EAAwBN,GAC/D,OAAOA,EAAYU,KAAKE,GAAcN,EAAazE,KAAK2C,SAASoC,EAAW/E,OA2BrEgF,CAAuBP,EAAcN,KAAiBK,EAAcC,IACpED,EAAcC,OAGnBP,EAAWU,QAAQN,EAAc5E,IAAK+C,QAAeA,GAAMC,SAAAA,QAG7D,IAAIuC,EAAW,GAWf,OAVIlB,EAAaJ,4BAA0BK,UACzCiB,EAAWzB,OAAO0B,OAAOD,EAAU,CAAE7C,YAAAA,KAEnC2B,EAAaJ,4BAA0BM,SACzCgB,EAAWzB,OAAO0B,OAAOD,EAAU,CAAEf,WAAAA,KAEnCE,IACFa,EAAWzB,OAAO0B,OAAOD,EAAU,CAAEd,YAAAA,KAGhCc,iBAGaE,EAAmBC,EAAoBC,GAC3D,IAAMC,EAAetD,KAAKC,UAAUmD,GACpC,WAAWG,QAAQ,CAACjE,EAASkE,KAC3BtF,EAAGuF,UACDJ,EACAC,EACCI,IACKA,EACFF,EAAOE,GAGTpE,iBChEQqE,EAAkBC,EAAkBC,EAAuBC,GACzE,IAAMC,EAAmB/F,EAAKsB,QAAQxB,QAAQC,MAAO6F,GAC/CzD,EAAwBnC,EAAKsB,QAAQxB,QAAQC,MAAO8F,GAO1D,OAAOjC,EALgB/C,EAAckF,GACT3C,EAAmBjB,GAE5B2D,EAAQE,QAAUrC,4BAA0BsC,IAAOtC,4BAA0BK,QAAUL,4BAA0BM,uBAKhHiC,EAAeJ,GACnC,IAAMF,SAAEA,EAAFC,cAAYA,EAAZM,OAA2BA,EAA3BC,IAAmCA,EAAnCJ,QAAwCA,GAAYF,EAEpDV,EAASO,EAAiBC,EAAUC,EAAeC,GAErDV,EAAOhD,cAAaiE,QAAQC,KAAK,kBAAmBD,QAAQE,MAAMnB,EAAOhD,cACzEgD,EAAOlB,aAAYmC,QAAQC,KAAK,iBAAkBD,QAAQE,MAAMnB,EAAOlB,aACvEkB,EAAOjB,aAAe6B,GAAWA,EAAU,IAAGK,QAAQC,KAAK,2BAA4BD,QAAQE,MAAMnB,EAAOjB,cAE5GgC,UACIhB,EAAkBC,EAAQpF,EAAKsB,QAAQxB,QAAQC,MAAOoG,IAC5DE,QAAQG,6CAA6CL,IAGnDC,GAAOhB,EAAOhD,aAAegD,EAAOhD,YAAY3C,OAAS,IAE3DyC,EAD8BlC,EAAKsB,QAAQxB,QAAQC,MAAO8F,GACZT,EAAOhD,aACrDiE,QAAQG,IAAI,khBF3BhB3E,QAAU4E,EAAIC,SCNF/C,EAAAA,8BAAAA,kDAEVA,yBACAA,uBACAA,yBACAA"}